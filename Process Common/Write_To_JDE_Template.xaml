<Activity mc:Ignorable="sap sap2010" x:Class="Write_To_JDE_Template" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_batchNumber" Type="InArgument(x:String)" />
    <x:Property Name="in_runDate" Type="InArgument(x:String)" />
    <x:Property Name="in_jde_DT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_companyName" Type="InArgument(x:String)" />
    <x:Property Name="in_reportFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_bankNameLong" Type="InArgument(x:String)" />
    <x:Property Name="in_completedSumHasValue" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1086,2383.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Creates the Receipt Loading Report file.&#xA;&#xA;Parameter:&#xA;in_bankNameLong (In, String):&#xA;in_completedSumHasValue (In, Boolean): &#xA;in_batchNumber (In, String): &#xA;in_companyName (In, String): &#xA;in_Config (In, Dictionary&lt;String,Object&gt;): Config&#xA;in_jde_DT (In, DataTable): &#xA;in_reportFilePath (In, String): &#xA;in_runDate (In, String): Run date&#xA;&#xA;Developer: Herbert Lusuegro and Greg Magsakay" DisplayName="Write to JDE template" sap:VirtualizedContainerService.HintSize="1046,2263.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_176">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataRow" Name="foundRow" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wb" />
      <Variable x:TypeArguments="x:Int32" Name="rangeColorRowCount" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[in_completedSumHasValue]" sap:VirtualizedContainerService.HintSize="1024,1910.66666666667" sap2010:WorkflowViewState.IdRef="If_29">
      <If.Then>
        <Sequence DisplayName="Write to JDE" sap:VirtualizedContainerService.HintSize="898,1756.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_175">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="876,62" sap2010:WorkflowViewState.IdRef="Assign_42">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[foundRow]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[in_jde_DT.AsEnumerable.Where(Function(x) x("LINE NUMBER").ToString.Equals("Batch No.")).First]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="876,62" sap2010:WorkflowViewState.IdRef="Assign_43">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[foundRow("RECEIPT NUMBER")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[in_batchNumber]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[not File.Exists(in_reportFilePath)]" sap:VirtualizedContainerService.HintSize="876,1428.66666666667" sap2010:WorkflowViewState.IdRef="If_28">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="436,990" sap2010:WorkflowViewState.IdRef="Sequence_172">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_reportFilePath]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="414,22" sap2010:WorkflowViewState.IdRef="CopyFile_5" Overwrite="True" Path="[in_Config(&quot;PATH_TEMPLATES&quot;).ToString + &quot;JDE Template.xlsx&quot;]" />
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="414,804" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_15" Workbook="[wb]" WorkbookPath="[in_reportFilePath]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="374.666666666667,695.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_171">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_jde_DT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="352.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="[in_companyName]" StartingCell="A4" />
                        <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="352.666666666667,346" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[Enumerable.Range(0,3)]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:Int32">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Int32" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="336,210.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_214">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell Bank Name" sap:VirtualizedContainerService.HintSize="314,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[wb.GetSheets(item)]" Text="[in_bankNameLong.ToUpper]" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="352.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_5" Workbook="[wb]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="414,1274.66666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_16" Workbook="[wb]" WorkbookPath="[in_reportFilePath]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="336,1166" sap2010:WorkflowViewState.IdRef="Sequence_174">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="oldRows" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[oldRows]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="314,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_12" Range="A4" SheetName="[in_companyName]" />
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[oldRows.Rows.Count]" />
                      <Assign DisplayName="Assign range color row count" sap:VirtualizedContainerService.HintSize="314,62" sap2010:WorkflowViewState.IdRef="Assign_44">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[rangeColorRowCount]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[oldRows.Rows.Count + 6]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ExcelSetRangeColor Color="[System.Drawing.Color.LightSlateGray]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_2" Range="[&quot;A&quot; +CStr(rangeColorRowCount) + &quot;:T&quot; + CStr(rangeColorRowCount)]" SheetName="[in_companyName]" />
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;&quot;}]" DataTable="[oldRows]" DisplayName="Add Empty Data Row" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;&quot;}]" DataTable="[oldRows]" DisplayName="Add Empty Data Row" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[in_jde_DT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="314,295.333333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="222,146" sap2010:WorkflowViewState.IdRef="Sequence_173">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[row.ItemArray]" DataTable="[oldRows]" DisplayName="Add Data Row -&gt; oldRows" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                      </ui:ForEachRow>
                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[oldRows]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="314,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="[in_companyName]" StartingCell="A4" />
                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="314,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_6" Workbook="[wb]" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>